\begin{thebibliography}{10}

\bibitem{CSHARP_ASYNC}
C\# async and await (reference).
\newblock http://msdn.microsoft.com/en-us/vstudio/async.aspx.

\bibitem{CSHARP_YIELD}
C\# yield (reference).
\newblock http://msdn.microsoft.com/en-us/library/9k7k7cf0(v=vs.80).aspx.

\bibitem{DLR}
Dlr (dynamic language runtime).
\newblock http://dlr.codeplex.com/.

\bibitem{ESA}
Entertainment software association.
\newblock http://www.theesa.com.

\bibitem{GALAXY_WARS}
Galaxy wars game.
\newblock http://vsteam2010.codeplex.com/.

\bibitem{SCRIPTING_LUA}
Games using lua as a scripting language.
\newblock http://en.wikipedia.org/wiki/Category:Lua-scripted\_video\_games.

\bibitem{UNITY_YIELD}
Scripting in unity.
\newblock http://unity3d.com/support/
  documentation/ScriptReference/index.Coroutines\_26\_Yield.html.

\bibitem{SWIG}
Swig (simplified wrapper and interface generator).
\newblock http://www.swig.org/.

\bibitem{UNREALSCRIPT_LATENT_FUNCTIONS}
Unrealscript documentation.
\newblock http://unreal.epicgames.com/UnrealScript.htm.

\bibitem{DESIGN_PC_GAME_ENGINE}
Lars Bishop, Dave Eberly, Turner Whitted, Mark Finch, and Michael Shantz.
\newblock Designing a pc game engine.
\newblock {\em IEEE Comput. Graph. Appl.}, 18:46--53, January 1998.

\bibitem{SCRIPTING_PYTHON}
Bruce Dawson.
\newblock Game scripting in python.
\newblock http:// www.gamasutra.com/features/ 20020821/dawson\_ pfv.htm, 2002.
\newblock Game Developers Conference Proceedings.

\bibitem{LUA_COROUTINES}
Ana~L. de~Moura, Noemi Rodriguez, and Roberto Ierusalimschy.
\newblock {Coroutines in Lua}.
\newblock {\em Journal of Universal Computer Science}, 10(7):910--925, July
  2004.

\bibitem{FRIENDLY_FSHARP}
Giuseppe Maggiore and Giulia Costantini.
\newblock {\em Friendly F\# (fun with game programming)}.
\newblock Smashwords.

\bibitem{CSHARP_LINQ}
Erik Meijer, Brian Beckman, and Gavin Bierman.
\newblock Linq: reconciling object, relations and xml in the .net framework.
\newblock In {\em Proceedings of the 2006 ACM SIGMOD international conference
  on Management of data}, SIGMOD '06, pages 706--706, New York, NY, USA, 2006.
  ACM.

\bibitem{MOGGI_MON}
Eugenio Moggi.
\newblock Notions of computation and monads.
\newblock {\em Information and Computation}, 93:55--92, 1989.

\bibitem{PYTHON_COROUTINES}
Guido Van~Rossum and Phillip Eby~J.
\newblock Pep 342 - coroutines via enhanced generators.
\newblock http://www.python.org/dev/peps/pep-0342/, 2010.

\bibitem{COMPR_MON}
Philip Wadler.
\newblock Comprehending monads.
\newblock In {\em Mathematical Structures in Computer Science}, pages 61--78,
  1992.

\bibitem{DECL_IMP}
Philip Wadler.
\newblock How to declare an imperative.
\newblock {\em ACM Comput. Surv.}, 29(3):240--263, 1997.

\bibitem{EFF_MON}
Philip Wadler and Peter Thiemann.
\newblock The marriage of effects and monads, 1998.

\bibitem{MONADIC_DSL}
Keith Wansbrough, Keith Wansbrough, John Hamer, and John Hamer.
\newblock A modular monadic action semantics.
\newblock In {\em In Conference on Domain-Specific Languages}, pages 157--170,
  1997.

\end{thebibliography}
