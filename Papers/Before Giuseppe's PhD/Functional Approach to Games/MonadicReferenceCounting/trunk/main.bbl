\begin{thebibliography}{10}

\bibitem{1_7}
Robert Atkey.
\newblock Parameterised notions of computation.
\newblock In {\em In MSFP 2006: Workshop on mathematically structured
  functional programming, ed. Conor McBride and Tarmo Uustalu. Electronic
  Workshops in Computing, British Computer Society}, pages 31--45, 2006.

\bibitem{7_5}
David~F. Bacon, Clement~R. Attanasio, Han~B. Lee, V.T. Rajan, and Stephen
  Smith.
\newblock Java without the coffee breaks: A nonintrusive multiprocessor garbage
  collector.
\newblock In {\em In Proceedings of the ACM SIGPLAN Conference on Programming
  Language Design and Implementation (PLDI) (Snowbird}, pages 92--103. ACM
  Press, 2001.

\bibitem{7_7}
Henry~G. Baker.
\newblock Cons should not cons its arguments, part ii: Cheney on the m.t.a.,
  1994.

\bibitem{7_4}
Henry~G. Baker.
\newblock Minimizing reference count updating with deferred and anchored
  pointers for functional data structures.
\newblock {\em SIGPLAN Not.}, 29:38--43, September 1994.

\bibitem{3_5}
Jacques Carette, Oleg Kiselyov, and Chung chieh Shan.
\newblock Finally tagless, partially evaluated - tagless staged interpreters
  for simpler typed languages.

\bibitem{3_2}
Manuel M.~T. Chakravarty, Gabriele Keller, Simon~Peyton Jones, and Simon
  Marlow.
\newblock Associated types with class.
\newblock In {\em In POPL '05: Proceedings of the 32nd ACM SIGPLAN-SIGACT
  symposium on Principles of programming languages}, pages 1--13. ACM Press,
  2005.

\bibitem{2_2}
James Cheney and Ralf Hinze.
\newblock First-class phantom types.
\newblock Technical report, Cornell University, 2003.

\bibitem{2_1}
James Cheney and Ralf Hinze.
\newblock Phantom types, 2003.

\bibitem{7_6}
T~W Christopher.
\newblock Reference count garbage collection.
\newblock {\em Software Practice and Experience}, (14), 1984.

\bibitem{9_2}
Koen Claessen, Mary Sheeran, and Joel Svensson.
\newblock Obsidian: Gpu programming in haskell.
\newblock In {\em DCC}, 2008.

\bibitem{6_6}
D~Clarke and A~Löh.
\newblock Generic haskell, specifically.
\newblock In {\em Generic Programming. Proceedings of the IFIP TC2 Working
  Conference on Generic Programming, Schloss Dagstuhl}, pages 1--4020. Kluwer
  Academic Publishers. ISBN, 2003.

\bibitem{8_6}
Karl Crary, David Walker, and Greg Morrisett.
\newblock Typed memory management in a calculus of capabilities.
\newblock In {\em In ACM Symposium on Principles of Programming Languages
  (POPL}, pages 262--275, 1999.

\bibitem{5_4}
Iavor~S. Diatchki and Mark~P. Jones.
\newblock Strongly typed memory areas: programming systems-level data
  structures in a functional language.
\newblock In {\em Proceedings of the 2006 ACM SIGPLAN workshop on Haskell},
  Haskell '06, pages 72--83, New York, NY, USA, 2006. ACM.

\bibitem{8_4}
M~Fähndrich and R~DeLine.
\newblock Adoption and focus: Practical linear types for imperative
  programming.
\newblock Technical report, 2002.

\bibitem{8_1}
M~Fluet and G~Morrisett.
\newblock Monadic regions.
\newblock {\em Journal of Functional Programming}, 2006.

\bibitem{8_3}
M~Fluet, G~Morrisett, and A~Ahmed.
\newblock Linear regions are all you need.
\newblock In {\em In Programming Languages and Systems, ESOP 2006, volume 3924
  of LNCS}. Springer, 2006.

\bibitem{2_3}
Ralf Hinze.
\newblock {\em {Fun with phantom types}}, pages 245--262.
\newblock Palgrave Macmillan, 2003.

\bibitem{6_5}
Ralf Hinze.
\newblock Generics for the masses.
\newblock In {\em In ICFP â€™04: Proceedings of the ninth ACM SIGPLAN
  international conference on Functional programming}, pages 236--243. ACM
  Press, 2004.

\bibitem{6_9}
Ralf Hinze, Johan Jeuring, and Andres Löh.
\newblock Type-indexed data types.
\newblock In {\em SCIENCE OF COMPUTER PROGRAMMING}, pages 148--174, 2004.

\bibitem{7_1}
Paul Hudak.
\newblock A semantic model of reference counting and its abstraction (detailed
  summary).
\newblock In {\em Proceedings of the 1986 ACM conference on LISP and functional
  programming}, LFP '86, pages 351--363, New York, NY, USA, 1986. ACM.

\bibitem{1_6}
Graham Hutton and Erik Meijer.
\newblock Monadic parsing in haskell, 1993.

\bibitem{6_2}
Patrik Jansson and Johan Jeuring.
\newblock Polyp - a polytypic programming language extension.
\newblock In {\em POPL'97: The 24th ACM SIGPLAN-SIGACT Symposium on Principles
  of Programming Languages}, pages 470--482. ACM Press, 1997.

\bibitem{4_2}
Wolfgang Jeltsch.
\newblock Generic record combinators with static type checking.
\newblock In {\em Proceedings of the 12th international ACM SIGPLAN symposium
  on Principles and practice of declarative programming}, PPDP '10, pages
  143--154, New York, NY, USA, 2010. ACM.

\bibitem{7_3}
Pramod~G. Joisha.
\newblock Compiler optimizations for nondeferred reference: counting garbage
  collection.
\newblock In {\em Proceedings of the 5th international symposium on Memory
  management}, ISMM '06, pages 150--161, New York, NY, USA, 2006. ACM.

\bibitem{7_2}
Pramod~G. Joisha.
\newblock A principled approach to nondeferred reference-counting garbage
  collection.
\newblock In {\em Proceedings of the fourth ACM SIGPLAN/SIGOPS international
  conference on Virtual execution environments}, VEE '08, pages 131--140, New
  York, NY, USA, 2008. ACM.

\bibitem{3_3}
Mark~P. Jones.
\newblock Functional programming with overloading and higher-order
  polymorphism, 1995.

\bibitem{3_4}
Mark~P. Jones.
\newblock Type classes with functional dependencies.
\newblock In {\em ESOP/ETA (LNCS)}, pages 230--244. Springer-Verlag, 2000.

\bibitem{1_2}
Richard~B. Kieburtz.
\newblock Taming effects with monadic typing, 1999.

\bibitem{4_1}
Oleg Kiselyov.
\newblock Strongly typed heterogeneous collections.
\newblock In {\em In Haskell '04: Proceedings of the ACM SIGPLAN workshop on
  Haskell}, pages 96--107. ACM Press, 2004.

\bibitem{5_3}
Oleg Kiselyov and Chung chieh Shan.
\newblock Lightweight static capabilities, 2006.

\bibitem{5_2}
Oleg Kiselyov and Chung chieh Shan.
\newblock Position: Lightweight static resources: Sexy types for embedded and
  systems programming.
\newblock In {\em In TFP '07, the 8 th Symposium on Trends in Functional
  Programming}, 2007.

\bibitem{3_1}
Oleg Kiselyov, Simon Peyton, and Jones~Chung chieh Shan.
\newblock Fun with type functions version 2, 2009.

\bibitem{5_1}
Oleg Kiselyov and Chung-chieh Shan.
\newblock Lightweight monadic regions.
\newblock In {\em Proceedings of the first ACM SIGPLAN symposium on Haskell},
  Haskell '08, pages 1--12, New York, NY, USA, 2008. ACM.

\bibitem{9_1}
Sean Lee, Vinod Grover, Manuel M.~T. Chakravarty, and Gabriele Keller.
\newblock Gpu kernels as data-parallel array computations in haskell, 2009.

\bibitem{6_3}
Ralf Lämmel and Simon~Peyton Jones.
\newblock Scrap your boilerplate: a practical approach to generic programming.
\newblock In {\em In ACM SIGPLAN International Workshop on Types in Language
  Design and Implementation}, pages 26--37. ACM Press, 2003.

\bibitem{6_4}
Ralf Lämmel and Joost Visser.
\newblock Typed combinators for generic traversal.
\newblock In {\em Proc. of PADL 2002}, pages 137--154. Springer-Verlag, 2002.

\bibitem{1_4}
Eugenio Moggi.
\newblock Notions of computation and monads.
\newblock {\em Information and Computation}, 93:55--92, 1989.

\bibitem{6_8}
Ian~Lynagh Programming and Ian Lynagh.
\newblock Template haskell: A report from the field, 2003.

\bibitem{6_1}
Alexey Rodriguez, Johan Jeuring, Patrik Jansson, Alex Gerdes, Bruno C. D.~S.
  Oliveira, Alexey Rodriguez, and Alex Gerdes.
\newblock Comparing libraries for generic programming in haskell.

\bibitem{6_7}
Tim Sheard and Simon~Peyton Jones.
\newblock Template meta-programming for haskell.
\newblock In {\em Haskell '02: Proceedings of the 2002 ACM SIGPLAN workshop on
  Haskell}, pages 1--16, New York, NY, USA, 2002. ACM.

\bibitem{8_7}
Mads Tofte and Jean-Pierre Talpin.
\newblock Region-based memory management, 1997.

\bibitem{8_5}
Philip Wadler.
\newblock Linear types can change the world.
\newblock In {\em Progarmming Concepts and Methods, Sea of Galilee}, 1990.

\bibitem{1_3}
Philip Wadler.
\newblock Comprehending monads.
\newblock In {\em Mathematical Structures in Computer Science}, pages 61--78,
  1992.

\bibitem{8_2}
Philip Wadler.
\newblock Monads for functional programming.
\newblock In {\em Advanced Functional Programming, Proceedings of the Bastad
  Spring School, number 925 in Lecture Notes in Computer Science}.
  Springer-Verlag, 1995.

\bibitem{1_1}
Philip Wadler.
\newblock How to declare an imperative.
\newblock {\em ACM Comput. Surv.}, 29(3):240--263, 1997.

\bibitem{1_5}
Philip Wadler and Peter Thiemann.
\newblock The marriage of effects and monads, 1998.

\bibitem{8_8}
David Walker and Kevin Watkins.
\newblock On regions and linear types (extended abstract).
\newblock In {\em In Proceedings of the sixth ACM SIGPLAN international
  conference on Functional programming}, pages 181--192. ACM Press, 2001.

\end{thebibliography}
